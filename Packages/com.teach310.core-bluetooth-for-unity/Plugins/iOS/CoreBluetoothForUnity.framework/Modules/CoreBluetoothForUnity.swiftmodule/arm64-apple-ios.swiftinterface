// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.124.2 clang-1403.0.22.11.100)
// swift-module-flags: -target arm64-apple-ios14.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name CoreBluetoothForUnity
// swift-module-flags-ignorable: -enable-bare-slash-regex
import CoreBluetooth
import Foundation
import Swift
import _Concurrency
import _StringProcessing
extension CoreBluetoothForUnity.CB4UCentralManager {
  public func characteristicProperties(_ peripheralId: Swift.String, _ serviceUUID: CoreBluetooth.CBUUID, _ characteristicUUID: CoreBluetooth.CBUUID) -> Swift.Int32
}
extension CoreBluetoothForUnity.CB4UCentralManager {
  public func peripheralDiscoverServices(_ peripheralId: Swift.String, _ serviceUUIDs: [CoreBluetooth.CBUUID]?) -> Swift.Int32
  public func peripheralDiscoverCharacteristics(_ peripheralId: Swift.String, _ serviceUUID: CoreBluetooth.CBUUID, _ characteristicUUIDs: [CoreBluetooth.CBUUID]?) -> Swift.Int32
  public func peripheralReadCharacteristicValue(_ peripheralId: Swift.String, _ serviceUUID: CoreBluetooth.CBUUID, _ characteristicUUID: CoreBluetooth.CBUUID) -> Swift.Int32
  public func peripheralWriteCharacteristicValue(_ peripheralId: Swift.String, _ serviceUUID: CoreBluetooth.CBUUID, _ characteristicUUID: CoreBluetooth.CBUUID, _ value: Foundation.Data, _ type: CoreBluetooth.CBCharacteristicWriteType) -> Swift.Int32
  public func peripheralSetNotifyValue(_ peripheralId: Swift.String, _ serviceUUID: CoreBluetooth.CBUUID, _ characteristicUUID: CoreBluetooth.CBUUID, _ enabled: Swift.Bool) -> Swift.Int32
  public func peripheralState(_ peripheralId: Swift.String) -> Swift.Int32
}
@objc @_inheritsConvenienceInitializers public class CB4UCentralManager : ObjectiveC.NSObject {
  public var didConnectHandler: CoreBluetoothForUnity.CB4UCentralManagerDidConnectHandler?
  public var didDisconnectPeripheralHandler: CoreBluetoothForUnity.CB4UCentralManagerDidDisconnectPeripheralHandler?
  public var didFailToConnectHandler: CoreBluetoothForUnity.CB4UCentralManagerDidFailToConnectHandler?
  public var didDiscoverPeripheralHandler: CoreBluetoothForUnity.CB4UCentralManagerDidDiscoverPeripheralHandler?
  public var didUpdateStateHandler: CoreBluetoothForUnity.CB4UCentralManagerDidUpdateStateHandler?
  public var peripheralDidDiscoverServicesHandler: CoreBluetoothForUnity.CB4UPeripheralDidDiscoverServicesHandler?
  public var peripheralDidDiscoverCharacteristicsHandler: CoreBluetoothForUnity.CB4UPeripheralDidDiscoverCharacteristicsHandler?
  public var peripheralDidUpdateValueForCharacteristicHandler: CoreBluetoothForUnity.CB4UPeripheralDidUpdateValueForCharacteristicHandler?
  public var peripheralDidWriteValueForCharacteristicHandler: CoreBluetoothForUnity.CB4UPeripheralDidWriteValueForCharacteristicHandler?
  public var peripheralDidUpdateNotificationStateForCharacteristicHandler: CoreBluetoothForUnity.CB4UPeripheralDidUpdateNotificationStateForCharacteristicHandler?
  @objc override dynamic public init()
  public func connect(peripheralId: Swift.String) -> Swift.Int32
  public func cancelPeripheralConnection(peripheralId: Swift.String) -> Swift.Int32
  public func scanForPeripherals(withServices serviceUUIDs: [CoreBluetooth.CBUUID]?)
  public func stopScan()
  public var isScanning: Swift.Bool {
    get
  }
  @objc deinit
}
extension CoreBluetoothForUnity.CB4UCentralManager : CoreBluetooth.CBCentralManagerDelegate {
  @objc dynamic public func centralManager(_ central: CoreBluetooth.CBCentralManager, didConnect peripheral: CoreBluetooth.CBPeripheral)
  @objc dynamic public func centralManager(_ central: CoreBluetooth.CBCentralManager, didDisconnectPeripheral peripheral: CoreBluetooth.CBPeripheral, error: (any Swift.Error)?)
  @objc dynamic public func centralManager(_ central: CoreBluetooth.CBCentralManager, didFailToConnect peripheral: CoreBluetooth.CBPeripheral, error: (any Swift.Error)?)
  @objc dynamic public func centralManager(_ central: CoreBluetooth.CBCentralManager, didDiscover peripheral: CoreBluetooth.CBPeripheral, advertisementData: [Swift.String : Any], rssi RSSI: Foundation.NSNumber)
  @objc dynamic public func centralManagerDidUpdateState(_ central: CoreBluetooth.CBCentralManager)
}
extension CoreBluetoothForUnity.CB4UCentralManager : CoreBluetooth.CBPeripheralDelegate {
  @objc dynamic public func peripheral(_ peripheral: CoreBluetooth.CBPeripheral, didDiscoverServices error: (any Swift.Error)?)
  @objc dynamic public func peripheral(_ peripheral: CoreBluetooth.CBPeripheral, didDiscoverCharacteristicsFor service: CoreBluetooth.CBService, error: (any Swift.Error)?)
  @objc dynamic public func peripheral(_ peripheral: CoreBluetooth.CBPeripheral, didUpdateValueFor characteristic: CoreBluetooth.CBCharacteristic, error: (any Swift.Error)?)
  @objc dynamic public func peripheral(_ peripheral: CoreBluetooth.CBPeripheral, didWriteValueFor characteristic: CoreBluetooth.CBCharacteristic, error: (any Swift.Error)?)
  @objc dynamic public func peripheral(_ peripheral: CoreBluetooth.CBPeripheral, didUpdateNotificationStateFor characteristic: CoreBluetooth.CBCharacteristic, error: (any Swift.Error)?)
}
@objc @_inheritsConvenienceInitializers public class CB4UPeripheralManager : ObjectiveC.NSObject {
  public var didUpdateStateHandler: CoreBluetoothForUnity.CB4UCentralManagerDidUpdateStateHandler?
  @objc override dynamic public init()
  @objc deinit
}
extension CoreBluetoothForUnity.CB4UPeripheralManager : CoreBluetooth.CBPeripheralManagerDelegate {
  @objc dynamic public func peripheralManagerDidUpdateState(_ peripheral: CoreBluetooth.CBPeripheralManager)
}
@_cdecl("cb4u_central_manager_new")
public func cb4u_central_manager_new() -> Swift.UnsafeMutableRawPointer
@_cdecl("cb4u_central_manager_release")
public func cb4u_central_manager_release(_ centralManagerPtr: Swift.UnsafeRawPointer)
public typealias CB4UCentralManagerDidConnectHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.UnsafePointer<Swift.CChar>) -> Swift.Void
public typealias CB4UCentralManagerDidDisconnectPeripheralHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.UnsafePointer<Swift.CChar>, Swift.Int32) -> Swift.Void
public typealias CB4UCentralManagerDidFailToConnectHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.UnsafePointer<Swift.CChar>, Swift.Int32) -> Swift.Void
public typealias CB4UCentralManagerDidDiscoverPeripheralHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.CChar>, Swift.Int32) -> Swift.Void
public typealias CB4UCentralManagerDidUpdateStateHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.Int32) -> Swift.Void
public typealias CB4UPeripheralDidDiscoverServicesHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.CChar>, Swift.Int32) -> Swift.Void
public typealias CB4UPeripheralDidDiscoverCharacteristicsHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.CChar>, Swift.Int32) -> Swift.Void
public typealias CB4UPeripheralDidUpdateValueForCharacteristicHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.UInt8>, Swift.Int32, Swift.Int32) -> Swift.Void
public typealias CB4UPeripheralDidWriteValueForCharacteristicHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.CChar>, Swift.Int32) -> Swift.Void
public typealias CB4UPeripheralDidUpdateNotificationStateForCharacteristicHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.CChar>, Swift.UnsafePointer<Swift.CChar>, Swift.Int32, Swift.Int32) -> Swift.Void
@_cdecl("cb4u_central_manager_register_handlers")
public func cb4u_central_manager_register_handlers(_ centralPtr: Swift.UnsafeRawPointer, _ didConnectHandler: CoreBluetoothForUnity.CB4UCentralManagerDidConnectHandler, _ didDisconnectPeripheralHandler: CoreBluetoothForUnity.CB4UCentralManagerDidDisconnectPeripheralHandler, _ didFailToConnectHandler: CoreBluetoothForUnity.CB4UCentralManagerDidFailToConnectHandler, _ didDiscoverPeripheralHandler: CoreBluetoothForUnity.CB4UCentralManagerDidDiscoverPeripheralHandler, _ didUpdateStateHandler: CoreBluetoothForUnity.CB4UCentralManagerDidUpdateStateHandler, _ peripheralDidDiscoverServicesHandler: CoreBluetoothForUnity.CB4UPeripheralDidDiscoverServicesHandler, _ peripheralDidDiscoverCharacteristicsHandler: CoreBluetoothForUnity.CB4UPeripheralDidDiscoverCharacteristicsHandler, _ peripheralDidUpdateValueForCharacteristicHandler: CoreBluetoothForUnity.CB4UPeripheralDidUpdateValueForCharacteristicHandler, _ peripheralDidWriteValueForCharacteristicHandler: CoreBluetoothForUnity.CB4UPeripheralDidWriteValueForCharacteristicHandler, _ peripheralDidUpdateNotificationStateForCharacteristicHandler: CoreBluetoothForUnity.CB4UPeripheralDidUpdateNotificationStateForCharacteristicHandler)
@_cdecl("cb4u_central_manager_connect")
public func cb4u_central_manager_connect(_ centralPtr: Swift.UnsafeRawPointer, _ peripheralId: Swift.UnsafePointer<Swift.CChar>) -> Swift.Int32
@_cdecl("cb4u_central_manager_cancel_peripheral_connection")
public func cb4u_central_manager_cancel_peripheral_connection(_ centralPtr: Swift.UnsafeRawPointer, _ peripheralId: Swift.UnsafePointer<Swift.CChar>) -> Swift.Int32
@_cdecl("cb4u_central_manager_scan_for_peripherals")
public func cb4u_central_manager_scan_for_peripherals(_ centralPtr: Swift.UnsafeRawPointer, _ serviceUUIDs: Swift.UnsafePointer<Swift.UnsafePointer<Swift.CChar>?>, _ serviceUUIDsCount: Swift.Int32)
@_cdecl("cb4u_central_manager_stop_scan")
public func cb4u_central_manager_stop_scan(_ centralPtr: Swift.UnsafeRawPointer)
@_cdecl("cb4u_central_manager_is_scanning")
public func cb4u_central_manager_is_scanning(_ centralPtr: Swift.UnsafeRawPointer) -> Swift.Bool
@_cdecl("cb4u_central_manager_peripheral_discover_services")
public func cb4u_central_manager_peripheral_discover_services(_ centralPtr: Swift.UnsafeRawPointer, _ peripheralId: Swift.UnsafePointer<Swift.CChar>, _ serviceUUIDs: Swift.UnsafePointer<Swift.UnsafePointer<Swift.CChar>?>, _ serviceUUIDsCount: Swift.Int32) -> Swift.Int32
@_cdecl("cb4u_central_manager_peripheral_discover_characteristics")
public func cb4u_central_manager_peripheral_discover_characteristics(_ centralPtr: Swift.UnsafeRawPointer, _ peripheralId: Swift.UnsafePointer<Swift.CChar>, _ serviceUUID: Swift.UnsafePointer<Swift.CChar>, _ characteristicUUIDs: Swift.UnsafePointer<Swift.UnsafePointer<Swift.CChar>?>, _ characteristicUUIDsCount: Swift.Int32) -> Swift.Int32
@_cdecl("cb4u_central_manager_peripheral_read_characteristic_value")
public func cb4u_central_manager_peripheral_read_characteristic_value(_ centralPtr: Swift.UnsafeRawPointer, _ peripheralId: Swift.UnsafePointer<Swift.CChar>, _ serviceUUID: Swift.UnsafePointer<Swift.CChar>, _ characteristicUUID: Swift.UnsafePointer<Swift.CChar>) -> Swift.Int32
@_cdecl("cb4u_central_manager_peripheral_write_characteristic_value")
public func cb4u_central_manager_peripheral_write_characteristic_value(_ centralPtr: Swift.UnsafeRawPointer, _ peripheralId: Swift.UnsafePointer<Swift.CChar>, _ serviceUUID: Swift.UnsafePointer<Swift.CChar>, _ characteristicUUID: Swift.UnsafePointer<Swift.CChar>, _ dataBytes: Swift.UnsafePointer<Swift.UInt8>, _ dataLength: Swift.Int32, _ writeType: Swift.Int32) -> Swift.Int32
@_cdecl("cb4u_central_manager_peripheral_set_notify_value")
public func cb4u_central_manager_peripheral_set_notify_value(_ centralPtr: Swift.UnsafeRawPointer, _ peripheralId: Swift.UnsafePointer<Swift.CChar>, _ serviceUUID: Swift.UnsafePointer<Swift.CChar>, _ characteristicUUID: Swift.UnsafePointer<Swift.CChar>, _ enabled: Swift.Bool) -> Swift.Int32
@_cdecl("cb4u_central_manager_peripheral_state")
public func cb4u_central_manager_peripheral_state(_ centralPtr: Swift.UnsafeRawPointer, _ peripheralId: Swift.UnsafePointer<Swift.CChar>) -> Swift.Int32
@_cdecl("cb4u_central_manager_characteristic_properties")
public func cb4u_central_manager_characteristic_properties(_ centralPtr: Swift.UnsafeRawPointer, _ peripheralId: Swift.UnsafePointer<Swift.CChar>, _ serviceUUID: Swift.UnsafePointer<Swift.CChar>, _ characteristicUUID: Swift.UnsafePointer<Swift.CChar>) -> Swift.Int32
@_cdecl("cb4u_peripheral_manager_new")
public func cb4u_peripheral_manager_new() -> Swift.UnsafeMutableRawPointer
@_cdecl("cb4u_peripheral_manager_release")
public func cb4u_peripheral_manager_release(_ peripheralManagerPtr: Swift.UnsafeRawPointer)
public typealias CB4UPeripheralManagerDidUpdateStateHandler = @convention(c) (Swift.UnsafeRawPointer, Swift.Int32) -> Swift.Void
@_cdecl("cb4u_peripheral_manager_register_handlers")
public func cb4u_peripheral_manager_register_handlers(_ peripheralManagerPtr: Swift.UnsafeRawPointer, _ didUpdateStateHandler: CoreBluetoothForUnity.CB4UPeripheralManagerDidUpdateStateHandler)
